{"version":3,"sources":["device.js"],"names":["device","previousDevice","addClass","documentElement","find","handleOrientation","hasClass","orientationEvent","removeClass","userAgent","window","document","navigator","toLowerCase","ios","iphone","ipod","ipad","windows","android","androidPhone","androidTablet","blackberry","blackberryPhone","blackberryTablet","windowsPhone","windowsTablet","fxos","fxosPhone","fxosTablet","meego","cordova","location","protocol","nodeWebkit","process","mobile","tablet","desktop","television","i","length","portrait","innerHeight","innerWidth","landscape","noConflict","this","needle","indexOf","className","regex","RegExp","match","currentClassNames","replace","Object","prototype","hasOwnProperty","call","addEventListener","attachEvent","define","amd","module","exports"],"mappings":"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","file":"device.min.js","sourcesContent":["// Device.js\n// (c) 2014 Matthew Hudson\n// Device.js is freely distributable under the MIT license.\n// For all details and documentation:\n// http://matthewhudson.me/projects/device.js/\n\n(function() {\n\n  var device,\n    previousDevice,\n    addClass,\n    documentElement,\n    find,\n    handleOrientation,\n    hasClass,\n    orientationEvent,\n    removeClass,\n    userAgent;\n\n  // Save the previous value of the device variable.\n  previousDevice = window.device;\n\n  device = {};\n\n  // Add device as a global object.\n  window.device = device;\n\n  // The <html> element.\n  documentElement = window.document.documentElement;\n\n  // The client user agent string.\n  // Lowercase, so we can use the more efficient indexOf(), instead of Regex\n  userAgent = window.navigator.userAgent.toLowerCase();\n\n  // Main functions\n  // --------------\n\n  device.ios = function () {\n    return device.iphone() || device.ipod() || device.ipad();\n  };\n\n  device.iphone = function () {\n    return !device.windows() && find('iphone');\n  };\n\n  device.ipod = function () {\n    return find('ipod');\n  };\n\n  device.ipad = function () {\n    return find('ipad');\n  };\n\n  device.android = function () {\n    return !device.windows() && find('android');\n  };\n\n  device.androidPhone = function () {\n    return device.android() && find('mobile');\n  };\n\n  device.androidTablet = function () {\n    return device.android() && !find('mobile');\n  };\n\n  device.blackberry = function () {\n    return find('blackberry') || find('bb10') || find('rim');\n  };\n\n  device.blackberryPhone = function () {\n    return device.blackberry() && !find('tablet');\n  };\n\n  device.blackberryTablet = function () {\n    return device.blackberry() && find('tablet');\n  };\n\n  device.windows = function () {\n    return find('windows');\n  };\n\n  device.windowsPhone = function () {\n    return device.windows() && find('phone');\n  };\n\n  device.windowsTablet = function () {\n    return device.windows() && (find('touch') && !device.windowsPhone());\n  };\n\n  device.fxos = function () {\n    return (find('(mobile;') || find('(tablet;')) && find('; rv:');\n  };\n\n  device.fxosPhone = function () {\n    return device.fxos() && find('mobile');\n  };\n\n  device.fxosTablet = function () {\n    return device.fxos() && find('tablet');\n  };\n\n  device.meego = function () {\n    return find('meego');\n  };\n\n  device.cordova = function () {\n    return window.cordova && location.protocol === 'file:';\n  };\n\n  device.nodeWebkit = function () {\n    return typeof window.process === 'object';\n  };\n\n  device.mobile = function () {\n    return device.androidPhone() || device.iphone() || device.ipod() || device.windowsPhone() || device.blackberryPhone() || device.fxosPhone() || device.meego();\n  };\n\n  device.tablet = function () {\n    return device.ipad() || device.androidTablet() || device.blackberryTablet() || device.windowsTablet() || device.fxosTablet();\n  };\n\n  device.desktop = function () {\n    return !device.tablet() && !device.mobile();\n  };\n\n  device.television = function() {\n    var i, television = [\n      \"googletv\",\n      \"viera\",\n      \"smarttv\",\n      \"internet.tv\",\n      \"netcast\",\n      \"nettv\",\n      \"appletv\",\n      \"boxee\",\n      \"kylo\",\n      \"roku\",\n      \"dlnadoc\",\n      \"roku\",\n      \"pov_tv\",\n      \"hbbtv\",\n      \"ce-html\"\n    ];\n\n    i = 0;\n    while (i < television.length) {\n      if (find(television[i])) {\n        return true;\n      }\n      i++;\n    }\n    return false;\n  };\n\n  device.portrait = function () {\n    return (window.innerHeight / window.innerWidth) > 1;\n  };\n\n  device.landscape = function () {\n    return (window.innerHeight / window.innerWidth) < 1;\n  };\n\n  // Public Utility Functions\n  // ------------------------\n\n  // Run device.js in noConflict mode,\n  // returning the device variable to its previous owner.\n  device.noConflict = function () {\n    window.device = previousDevice;\n    return this;\n  };\n\n  // Private Utility Functions\n  // -------------------------\n\n  // Simple UA string search\n  find = function (needle) {\n    return userAgent.indexOf(needle) !== -1;\n  };\n\n  // Check if documentElement already has a given class.\n  hasClass = function (className) {\n    var regex;\n    regex = new RegExp(className, 'i');\n    return documentElement.className.match(regex);\n  };\n\n  // Add one or more CSS classes to the <html> element.\n  addClass = function (className) {\n    var currentClassNames = null;\n    if (!hasClass(className)) {\n      currentClassNames = documentElement.className.replace(/^\\s+|\\s+$/g, '');\n      documentElement.className = currentClassNames + \" \" + className;\n    }\n  };\n\n  // Remove single CSS class from the <html> element.\n  removeClass = function (className) {\n    if (hasClass(className)) {\n      documentElement.className = documentElement.className.replace(\" \" + className, \"\");\n    }\n  };\n\n  // HTML Element Handling\n  // ---------------------\n\n  // Insert the appropriate CSS class based on the _user_agent.\n\n  if (device.ios()) {\n    if (device.ipad()) {\n      addClass(\"ios ipad tablet\");\n    } else if (device.iphone()) {\n      addClass(\"ios iphone mobile\");\n    } else if (device.ipod()) {\n      addClass(\"ios ipod mobile\");\n    }\n  } else if (device.android()) {\n    if (device.androidTablet()) {\n      addClass(\"android tablet\");\n    } else {\n      addClass(\"android mobile\");\n    }\n  } else if (device.blackberry()) {\n    if (device.blackberryTablet()) {\n      addClass(\"blackberry tablet\");\n    } else {\n      addClass(\"blackberry mobile\");\n    }\n  } else if (device.windows()) {\n    if (device.windowsTablet()) {\n      addClass(\"windows tablet\");\n    } else if (device.windowsPhone()) {\n      addClass(\"windows mobile\");\n    } else {\n      addClass(\"desktop\");\n    }\n  } else if (device.fxos()) {\n    if (device.fxosTablet()) {\n      addClass(\"fxos tablet\");\n    } else {\n      addClass(\"fxos mobile\");\n    }\n  } else if (device.meego()) {\n    addClass(\"meego mobile\");\n  } else if (device.nodeWebkit()) {\n    addClass(\"node-webkit\");\n  } else if (device.television()) {\n    addClass(\"television\");\n  } else if (device.desktop()) {\n    addClass(\"desktop\");\n  }\n\n  if (device.cordova()) {\n    addClass(\"cordova\");\n  }\n\n  // Orientation Handling\n  // --------------------\n\n  // Handle device orientation changes.\n  handleOrientation = function () {\n    if (device.landscape()) {\n      removeClass(\"portrait\");\n      addClass(\"landscape\");\n    } else {\n      removeClass(\"landscape\");\n      addClass(\"portrait\");\n    }\n  };\n\n  // Detect whether device supports orientationchange event,\n  // otherwise fall back to the resize event.\n  if (Object.prototype.hasOwnProperty.call(window, \"onorientationchange\")) {\n    orientationEvent = \"orientationchange\";\n  } else {\n    orientationEvent = \"resize\";\n  }\n\n  // Listen for changes in orientation.\n  if (window.addEventListener) {\n    window.addEventListener(orientationEvent, handleOrientation, false);\n  } else if (window.attachEvent) {\n    window.attachEvent(orientationEvent, handleOrientation);\n  } else {\n    window[orientationEvent] = handleOrientation;\n  }\n\n  handleOrientation();\n\n  if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    define(function() {\n      return device;\n    });\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = device;\n  } else {\n    window.device = device;\n  }\n\n}).call(this);"]}